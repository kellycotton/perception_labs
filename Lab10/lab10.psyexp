<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.1.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2022.1.4" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="lab10" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="setup">
      <CodeComponent name="code_setup">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import statistics &amp;#10;&amp;#10;fix_time = .5&amp;#10;&amp;#10;trial_n = 1&amp;#10;block_n = 1&amp;#10;block_count = 1&amp;#10;block_multiplier = 8 # should equal number of phoneme pairs tested&amp;#10;&amp;#10;win.mouseVisible = False&amp;#10;&amp;#10;dg_resps = [0]*20&amp;#10;dg_transition = [0]&amp;#10;bd_resps = [0]*20&amp;#10;bd_transition = [0]&amp;#10;&amp;#10;across_acc = 0&amp;#10;within_acc = 0 &amp;#10;&amp;#10;across_trial_n = 0&amp;#10;within_trial_n = 0&amp;#10;&amp;#10;def transition_count(response_array, right_end, transition_array):&amp;#10;    for index, resp in enumerate(response_array):&amp;#10;        if (resp == right_end) and (previous_resp == right_end):&amp;#10;            transition_array.append(index-1)&amp;#10;            break&amp;#10;        previous_resp = resp&amp;#10;    return transition_array" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_setup" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="final">
      <CodeComponent name="code_end">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="msg_1 = `Transition Point&amp;#10;D-G&amp;#10;${dg_transition_point}`&amp;#10;;&amp;#10;msg_2 = `Transition Point&amp;#10;B-D&amp;#10;${bd_transition_point}`&amp;#10;;&amp;#10;msg_3 = `Discrimination&amp;#10;Across&amp;#10;${round((across_acc / across_trial_n), 1)}`&amp;#10;;&amp;#10;msg_4 = `Discrimination&amp;#10;Within&amp;#10;${round((within_acc / within_trial_n), 1)}`&amp;#10;;&amp;#10;psychoJS.experiment.addData(&quot;Discrimination Across&quot;, Math.round((across_acc / across_trial_n), 1));&amp;#10;psychoJS.experiment.addData(&quot;Discrimination Within&quot;, Math.round((within_acc / within_trial_n), 1));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="msg_1 = f&quot;Transition Point\nD-G\n {dg_transition_point}&quot;&amp;#10;msg_2 = f&quot;Transition Point\nB-D\n {bd_transition_point}&quot;&amp;#10;msg_3 = f&quot;Discrimination\nAcross\n {round(across_acc/across_trial_n, 1)}&quot;&amp;#10;msg_4 = f&quot;Discrimination\nWithin\n {round(within_acc/within_trial_n, 1)}&quot;&amp;#10;&amp;#10;thisExp.addData(&quot;Discrimination Across&quot;,  round(across_acc/across_trial_n, 1))&amp;#10;thisExp.addData(&quot;Discrimination Within&quot;,  round(within_acc/within_trial_n, 1))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="end_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Results:" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="end_text_1">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.2, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_1" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="end_text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.2, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_2" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="end_text_3">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.2, .05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_3" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="end_text_4">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.2, .05)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg_4" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="end_text_space">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_text_space" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Record this result.&amp;#10;&amp;#10;Press SPACE when you are ready to end the experiment." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_end">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_end" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="120" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fixation">
      <PolygonComponent name="fixation_stim">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_stim" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$fix_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((stim_number === 0)) {&amp;#10;    feedback_msg = `That sound was ${left_resp_disp}.`;&amp;#10;} else {&amp;#10;    if ((stim_number === 19)) {&amp;#10;        feedback_msg = `That sound was ${right_resp_disp}.`;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if stim_number == 0:&amp;#10;    feedback_msg = f&quot;That sound was {left_resp_disp}.&quot;&amp;#10;elif stim_number == 19:&amp;#10;    feedback_msg = f&quot;That sound was {right_resp_disp}.&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="feedback_text1">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_text1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$feedback_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="feedback_text2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_text2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_feedback">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_feedback" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="end_practice">
      <TextComponent name="end_practice_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="end_practice_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You have finished the practice!&amp;#10;&amp;#10;Now it's time to begin the real experimental trials. These will be exactly the same as what you just practiced, but you will no longer receive feedback. &amp;#10;&amp;#10;You will see a screen encouraging you to take a break at several times during the experiment. When you have completed all trials, you will see your accuracy results. Record these results and report them to your instructor.&amp;#10;&amp;#10;If you have any questions, please ask your instructor now. &amp;#10;&amp;#10;Press SPACE when you are ready to begin." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_end_prac">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_end_prac" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="dg_resps = ([0] * 20);&amp;#10;dg_transition = [0];&amp;#10;bd_resps = ([0] * 20);&amp;#10;bd_transition = [0];&amp;#10;across_acc = 0;&amp;#10;within_acc = 0;&amp;#10;across_trial_n = 0;&amp;#10;within_trial_n = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="dg_resps = [0]*20&amp;#10;dg_transition = [0]&amp;#10;bd_resps = [0]*20&amp;#10;bd_transition = [0]&amp;#10;&amp;#10;across_acc = 0&amp;#10;within_acc = 0 &amp;#10;&amp;#10;across_trial_n = 0&amp;#10;within_trial_n = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="get_ready">
      <TextComponent name="text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ready? &amp;#10;&amp;#10;Press SPACE to start." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_id">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((key_resp_3.keys === &quot;left&quot;)) {&amp;#10;    key_response = left_resp;&amp;#10;} else {&amp;#10;    if ((key_resp_3.keys === &quot;right&quot;)) {&amp;#10;        key_response = right_resp;&amp;#10;    }&amp;#10;}&amp;#10;if (_pj.in_es6(&quot;dg&quot;, block)) {&amp;#10;    dg_resps[stim_number] = key_response;&amp;#10;} else {&amp;#10;    if (_pj.in_es6(&quot;bd&quot;, block)) {&amp;#10;        bd_resps[stim_number] = key_response;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_3.keys == &quot;left&quot;:&amp;#10;    key_response = left_resp&amp;#10;elif key_resp_3.keys == &quot;right&quot;:&amp;#10;    key_response = right_resp&amp;#10;&amp;#10;if &quot;dg&quot; in block:&amp;#10;    dg_resps[stim_number] = key_response&amp;#10;elif &quot;bd&quot; in block:&amp;#10;    bd_resps[stim_number] = key_response" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <SoundComponent name="sound_id">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="sound_id" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stimuli_sound" valType="str" updates="set every repeat" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <TextComponent name="text_8">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corr_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_6">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$f&quot;&gt;\n{right_resp_disp}&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_4">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$f&quot;&lt;\n{left_resp_disp}&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="response_id">
      <CodeComponent name="code_response">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((change === &quot;yes&quot;)) {&amp;#10;    corr_ans = &quot;right&quot;;&amp;#10;    corr_resp = &quot;different&quot;;&amp;#10;} else {&amp;#10;    if ((change === &quot;no&quot;)) {&amp;#10;        corr_ans = &quot;left&quot;;&amp;#10;        corr_resp = &quot;same&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if change == &quot;yes&quot;:&amp;#10;    corr_ans = &quot;right&quot;&amp;#10;    corr_resp = &quot;different&quot;&amp;#10;elif change == &quot;no&quot;:&amp;#10;    corr_ans = &quot;left&quot;&amp;#10;    corr_resp = &quot;same&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="feedback_msg = &quot;&quot;;&amp;#10;if ((key_resp.corr === 1)) {&amp;#10;    feedback_msg = `Correct! The tones were ${corr_resp.upper()}.`;&amp;#10;} else {&amp;#10;    feedback_msg = `Incorrect. The tones were ${corr_resp.upper()}. The correct answer was ${corr_ans.upper()}.`;&amp;#10;}&amp;#10;if ((change === &quot;no&quot;)) {&amp;#10;    total_accuracy_same += key_resp.corr;&amp;#10;} else {&amp;#10;    if ((change_condition === &quot;contour&quot;)) {&amp;#10;        total_accuracy_contour += key_resp.corr;&amp;#10;    } else {&amp;#10;        if ((change_condition === &quot;interval&quot;)) {&amp;#10;            total_accuracy_interval += key_resp.corr;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="feedback_msg = ''&amp;#10;if key_resp.corr == 1:&amp;#10;    feedback_msg = f&quot;Correct! The tones were {corr_resp.upper()}.&quot;&amp;#10;else:&amp;#10;    feedback_msg = f&quot;Incorrect. The tones were {corr_resp.upper()}. The correct answer was {corr_ans.upper()}.&quot;&amp;#10;    &amp;#10;&amp;#10;if change == &quot;no&quot;:&amp;#10;    total_accuracy_same += key_resp.corr&amp;#10;elif change_condition == &quot;contour&quot;:&amp;#10;    total_accuracy_contour += key_resp.corr&amp;#10;elif change_condition == &quot;interval&quot;:&amp;#10;    total_accuracy_interval += key_resp.corr" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_response" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'right','left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corr_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&gt;&amp;#10;DIFFERENT" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_3">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;&amp;#10;SAME" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_5">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions_id">
      <TextComponent name="instruct_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to the experiment!&amp;#10;&amp;#10;During this experiment, you will complete two tasks. During the first task, you will hear a sound. Your job is to identify if the sound starts with one of two phonemes. Please make sure that you have the sound on your computer turned on.&amp;#10;&amp;#10;During the trial, you will first see a cross in the center of the screen. This is your warning that the sound is about to appear and that you should get ready. Next, you will hear the sound. Then, you will see the response screen. When you see the response screen, use the arrow keys to indicate which phoneme you think was at the start of the sound.&amp;#10;&amp;#10;Let's try a few practice trials.&amp;#10;&amp;#10;Press SPACE to begin the practice." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_instruct">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_instruct" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instructions_disc">
      <TextComponent name="instruct_text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Congratulations, you have finished the first task!&amp;#10;&amp;#10;During the second task, you will hear two sounds similar to the sounds you heard earlier. Your job is to report if you perceive the sounds to be the same or different. There are no right or wrong answers.&amp;#10;&amp;#10;During the trial, you will first see a cross in the center of the screen. This is your warning that the sounds are about to appear and that you should get ready. Next, you will hear the first sound. There will be a brief delay and then you will hear the second sound. Finally, you will see the response screen. When you see the response screen, press the S key if you think the sounds are the SAME or the D key if you think the sounds are different.&amp;#10;&amp;#10;Press SPACE to begin.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_instruct_2">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_instruct_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="dg_transition_point = Number.parseInt(Math.round(statistics.mean(dg_transition), 0));&amp;#10;bd_transition_point = Number.parseInt(Math.round(statistics.mean(bd_transition), 0));&amp;#10;block_count = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="dg_transition_point = int(round(statistics.mean(dg_transition), 0))&amp;#10;bd_transition_point = int(round(statistics.mean(bd_transition), 0))&amp;#10;&amp;#10;block_count = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="trial_disc">
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(&quot;dg&quot;, block)) {&amp;#10;    midpoint = dg_transition_point;&amp;#10;} else {&amp;#10;    if (_pj.in_es6(&quot;bd&quot;, block)) {&amp;#10;        midpoint = bd_transition_point;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if &quot;dg&quot; in block:&amp;#10;    midpoint = dg_transition_point&amp;#10;elif &quot;bd&quot; in block:&amp;#10;    midpoint = bd_transition_point" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((stim_number_1 &lt; midpoint) &amp;&amp; (stim_number_2 &gt;= midpoint))) {&amp;#10;    across_trial_n += 1;&amp;#10;    if ((key_resp_4.keys === &quot;d&quot;)) {&amp;#10;        across_acc += 1;&amp;#10;    }&amp;#10;} else {&amp;#10;    within_trial_n += 1;&amp;#10;    if ((key_resp_4.keys === &quot;d&quot;)) {&amp;#10;        within_acc += 1;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if (stim_number_1 &lt; midpoint) and (stim_number_2 &gt;= midpoint):&amp;#10;    across_trial_n += 1&amp;#10;    if (key_resp_4.keys == 'd'):&amp;#10;        across_acc += 1&amp;#10;else:&amp;#10;    within_trial_n += 1&amp;#10;    if (key_resp_4.keys == 'd'):&amp;#10;        within_acc += 1&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <SoundComponent name="sound_id_2">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="sound_id_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stimuli_sound_1" valType="str" updates="set every repeat" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <SoundComponent name="sound_id_3">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="hamming"/>
        <Param val="sound_id_3" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$stimuli_sound_2" valType="str" updates="set every repeat" name="sound"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
        <Param val="1" valType="num" updates="constant" name="volume"/>
      </SoundComponent>
      <TextComponent name="text_9">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$sound_id_3.status==FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param val="'s','d'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corr_ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$sound_id_3.status==FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_7">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$sound_id_3.status==FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$f&quot;D\nDIFFERENT&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_10">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.2, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$sound_id_3.status==FINISHED" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$f&quot;S\nSAME&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="end_block_id">
      <CodeComponent name="block_end_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;block_msg = ((((&quot;You have reached the end of block &quot; + block_count.toString()) + &quot; of &quot;) + (block_n * block_multiplier).toString()) + &quot; of the first task.&quot;);&amp;#10;if (_pj.in_es6(&quot;dg&quot;, block)) {&amp;#10;    dg_transition = transition_count(dg_resps, right_resp, dg_transition);&amp;#10;} else {&amp;#10;    if (_pj.in_es6(&quot;bd&quot;, block)) {&amp;#10;        bd_transition = transition_count(bd_resps, right_resp, bd_transition);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="block_msg = &quot;You have reached the end of block &quot; + str(block_count) + &quot; of &quot; + str(block_n*block_multiplier) + &quot; of the first task.&quot; &amp;#10;&amp;#10;if &quot;dg&quot; in block:&amp;#10;    dg_transition = transition_count(dg_resps, right_resp, dg_transition)&amp;#10;elif &quot;bd&quot; in block:&amp;#10;    bd_transition = transition_count(bd_resps, right_resp, bd_transition)&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="block_count += 1;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="block_count += 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="block_end_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_message1">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_message1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$block_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="block_message2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_message2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please take a short break.&amp;#10;&amp;#10;Press SPACE when you are ready to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_block_cont">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_block_cont" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="end_block_disc">
      <CodeComponent name="block_end_code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="block_msg = ((((&quot;You have reached the end of block &quot; + block_count.toString()) + &quot; of &quot;) + (block_n * block_multiplier).toString()) + &quot; of the second task.&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="block_msg = &quot;You have reached the end of block &quot; + str(block_count) + &quot; of &quot; + str(block_n*block_multiplier) + &quot; of the second task.&quot; &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="block_count += 1;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="block_count += 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="block_end_code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_message1_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_message1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$block_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="block_message2_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_message2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please take a short break.&amp;#10;&amp;#10;Press SPACE when you are ready to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_block_cont_2">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_block_cont_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="instructions_id"/>
    <LoopInitiator loopType="TrialHandler" name="trials_id_prac">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim_conds_id_prac.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_id_prac" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial_id"/>
    <Routine name="feedback"/>
    <LoopTerminator name="trials_id_prac"/>
    <Routine name="end_practice"/>
    <LoopInitiator loopType="TrialHandler" name="block_id">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'a_dg'), ('rows_run', '1:20')]), OrderedDict([('block', 'ae_dg'), ('rows_run', '21:40')]), OrderedDict([('block', 'i_dg'), ('rows_run', '41:60')]), OrderedDict([('block', 'u_dg'), ('rows_run', '61:80')]), OrderedDict([('block', 'a_bd'), ('rows_run', '81:100')]), OrderedDict([('block', 'ae_bd'), ('rows_run', '101:120')]), OrderedDict([('block', 'i_bd'), ('rows_run', '121:140')]), OrderedDict([('block', 'u_bd'), ('rows_run', '141:160')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="block_conds_id.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="block_id" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials_id">
      <Param name="Selected rows" updates="None" val="$rows_run" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_dg'), ('stimuli_sound', 'CV_stimuli/a/a_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'da'), ('right_resp_disp', 'ga'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound', 'CV_stimuli/ae/ae_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'dae'), ('right_resp_disp', 'gae'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'i_dg'), ('stimuli_sound', 'CV_stimuli/i/i_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'di'), ('right_resp_disp', 'gi'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'u_dg'), ('stimuli_sound', 'CV_stimuli/u/u_dg_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'du'), ('right_resp_disp', 'gu'), ('left_resp', 'd'), ('right_resp', 'g')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'a_bd'), ('stimuli_sound', 'CV_stimuli/a/a_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'ba'), ('right_resp_disp', 'da'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound', 'CV_stimuli/ae/ae_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'bae'), ('right_resp_disp', 'dae'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'i_bd'), ('stimuli_sound', 'CV_stimuli/i/i_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'bi'), ('right_resp_disp', 'di'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/01.wav'), ('stim_number', 0), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/02.wav'), ('stim_number', 1), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/03.wav'), ('stim_number', 2), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/04.wav'), ('stim_number', 3), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/05.wav'), ('stim_number', 4), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/06.wav'), ('stim_number', 5), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/07.wav'), ('stim_number', 6), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/08.wav'), ('stim_number', 7), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/09.wav'), ('stim_number', 8), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/10.wav'), ('stim_number', 9), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/11.wav'), ('stim_number', 10), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/12.wav'), ('stim_number', 11), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/13.wav'), ('stim_number', 12), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/14.wav'), ('stim_number', 13), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/15.wav'), ('stim_number', 14), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/16.wav'), ('stim_number', 15), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/17.wav'), ('stim_number', 16), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/18.wav'), ('stim_number', 17), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/19.wav'), ('stim_number', 18), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')]), OrderedDict([('block', 'u_bd'), ('stimuli_sound', 'CV_stimuli/u/u_bd_CV/20.wav'), ('stim_number', 19), ('left_resp_disp', 'bu'), ('right_resp_disp', 'du'), ('left_resp', 'b'), ('right_resp', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim_conds_id.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="trial_n" valType="num"/>
      <Param name="name" updates="None" val="trials_id" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial_id"/>
    <LoopTerminator name="trials_id"/>
    <Routine name="end_block_id"/>
    <LoopTerminator name="block_id"/>
    <Routine name="instructions_disc"/>
    <LoopInitiator loopType="TrialHandler" name="block_disc">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'a_dg'), ('rows_run', '1:13')]), OrderedDict([('block', 'ae_dg'), ('rows_run', '14:26')]), OrderedDict([('block', 'i_dg'), ('rows_run', '27:39')]), OrderedDict([('block', 'u_dg'), ('rows_run', '40:52')]), OrderedDict([('block', 'a_bd'), ('rows_run', '53:65')]), OrderedDict([('block', 'ae_bd'), ('rows_run', '66:78')]), OrderedDict([('block', 'i_bd'), ('rows_run', '79:91')]), OrderedDict([('block', 'u_bd'), ('rows_run', '92:104')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="block_conds_disc.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="block_disc" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials_disc">
      <Param name="Selected rows" updates="None" val="$rows_run" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'a_dg'), ('stimuli_sound_1', 'CV_stimuli/a/a_dg_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/a/a_dg_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'ae_dg'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_dg_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/ae/ae_dg_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'i_dg'), ('stimuli_sound_1', 'CV_stimuli/i/i_dg_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/i/i_dg_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'u_dg'), ('stimuli_sound_1', 'CV_stimuli/u/u_dg_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/u/u_dg_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'a_bd'), ('stimuli_sound_1', 'CV_stimuli/a/a_bd_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/a/a_bd_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'ae_bd'), ('stimuli_sound_1', 'CV_stimuli/ae/ae_bd_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/ae/ae_bd_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'i_bd'), ('stimuli_sound_1', 'CV_stimuli/i/i_bd_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/i/i_bd_CV/18.wav'), ('stim_number_2', 16)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/03.wav'), ('stim_number_1', 2), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/06.wav'), ('stim_number_2', 4)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/04.wav'), ('stim_number_1', 3), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/07.wav'), ('stim_number_2', 5)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/05.wav'), ('stim_number_1', 4), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/08.wav'), ('stim_number_2', 6)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/06.wav'), ('stim_number_1', 5), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/09.wav'), ('stim_number_2', 7)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/07.wav'), ('stim_number_1', 6), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/10.wav'), ('stim_number_2', 8)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/08.wav'), ('stim_number_1', 7), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/11.wav'), ('stim_number_2', 9)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/09.wav'), ('stim_number_1', 8), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/12.wav'), ('stim_number_2', 10)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/10.wav'), ('stim_number_1', 9), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/13.wav'), ('stim_number_2', 11)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/11.wav'), ('stim_number_1', 10), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/14.wav'), ('stim_number_2', 12)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/12.wav'), ('stim_number_1', 11), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/15.wav'), ('stim_number_2', 13)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/13.wav'), ('stim_number_1', 12), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/16.wav'), ('stim_number_2', 14)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/14.wav'), ('stim_number_1', 13), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/17.wav'), ('stim_number_2', 15)]), OrderedDict([('block', 'u_bd'), ('stimuli_sound_1', 'CV_stimuli/u/u_bd_CV/15.wav'), ('stim_number_1', 14), ('stimuli_sound_2', 'CV_stimuli/u/u_bd_CV/18.wav'), ('stim_number_2', 16)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim_conds_disc.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_disc" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial_disc"/>
    <LoopTerminator name="trials_disc"/>
    <Routine name="end_block_disc"/>
    <LoopTerminator name="block_disc"/>
    <Routine name="final"/>
  </Flow>
</PsychoPy2experiment>
